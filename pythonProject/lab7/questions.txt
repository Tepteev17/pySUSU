1.Подпрограмма называется рекурсивной, если она содержит обращение к самой себе. 
2.Итерация
- решает задачу методом "от простого к сложному"; алгоритм – описание
процесса построения сложного объекта из более простых объектов
- запись алгоритма не всегда компактна и интуитивно понятна
- исполнение итеративного алгоритма, не связано с большими накладными
расходами и, как правило, более быстрое, чем рекурсивное.
3.При вызове подпрограммы ее локальные переменные и
фактические параметры помещаются в сегмент стека.
- Стек – линейный список, в котором чтение и запись данных
возможны только с одного конца (дисциплина LIFO – Last In
First Out, последним включен, первым извлечен).
4. Итерационный:
def Factorial(n):
   Res = 1
   for i in range (2, n+1):
      Res *= i
   return Res
Рекурсивный:
def Factorial(n):
   if (n==0) or (n==1):
      return 1
   else:
      return n*Factorial(n-1)
5.Косвенная (взаимная) рекурсия: один из шагов алгоритма
A формулируется как обращение к алгоритму B, в
котором один из шагов формулируется как обращение к
алгоритму A.
6.Рекурсивный.